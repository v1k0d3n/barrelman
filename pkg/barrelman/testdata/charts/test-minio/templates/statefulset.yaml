{{- if eq .Values.mode "distributed" }}
{{ $nodeCount := .Values.replicas | int }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "kubernetes-common.utils.chart_name_fq" . }}
  labels:
    app: {{ template "kubernetes-common.utils.chart_name" . }}
    chart: {{ template "kubernetes-common.utils.chart_label" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "kubernetes-common.utils.chart_name_fq" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "kubernetes-common.utils.chart_name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "kubernetes-common.utils.chart_name_fq" . }}
      labels:
        app: {{ template "kubernetes-common.utils.chart_name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.configPath }}
          args:
            - -C {{ .Values.configPath }} server
          {{- else }}
          args:
            - server
            {{- range $i := until $nodeCount }}
            - http://{{ template "kubernetes-common.utils.chart_name_fq" $ }}-{{ $i }}.{{ template "kubernetes-common.utils.chart_name_fq" $ }}.{{ $.Release.Namespace }}.svc.cluster.local{{ $.Values.mountPath }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: export
              mountPath: {{ .Values.mountPath }}
              {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
              subPath: "{{ .Values.persistence.subPath }}"
              {{- end }}
          ports:
            - name: service
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "kubernetes-common.utils.chart_name_fq" . }}
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "kubernetes-common.utils.chart_name_fq" . }}
                  key: secretkey
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: minio-user
          secret:
            secretName: {{ template "kubernetes-common.utils.chart_name_fq" . }}
  volumeClaimTemplates:
    - metadata:
        name: export
      spec:
        accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
{{- end }}

---
$id: ./docs/schemas/v0/barrelman/config.yaml
description: The Barrelman configuration yaml defines the desired infrastructure and control plane for a Flagship cluster. Additional properties are not supported and validation against this schema should catch many incorrect configurations.
type: object
additionalProperties: false
properties:
  environment:
    description: Configuration for the Flagship environment.
    type: object
    additionalProperties: false
    properties:
      arch:
        description: The cluster node architecture. Used when getting Kubernetes control plane component binaries. Only amd64 is supported.
        type: string
        default: amd64
        enum:
          - amd64
      repository:
        description: Additional repositories to add to the cluster node package manager.
        type: object
        additionalProperties: false
        properties:
          add:
            description: List of additional repositories to add. Requires at least one entry. If no additional repositories are needed, set entry to null.
            $ref: "#/definitions/common_string_array"
        required:
          - add
      packages:
        description: List of additional packages to install on cluster nodes. Package names are specific to the package manager used by the OS installed on the cluster nodes (for example apt-get vs. yum). Requires at least one valid entry.
        $ref: "#/definitions/common_string_array"
      services:
        description: "**NOT USED** Specifies desired state of services on cluster nodes."
        type: object
        additionalProperties: false
        properties:
          enabled:
            $ref: "#/definitions/common_string_array"
          started:
            $ref: "#/definitions/common_string_array"
        required:
          - enabled
          - started
      modules:
        description: List of additional kernel modules (for example ip_vs) to load on cluster nodes. Requires at least one valid entry.
        $ref: "#/definitions/common_string_array"
      additional_ca_certs:
        description: List of additional CA certificates to add to the HyperKit VM. This can be used to add corporate certs to allow use of Flagship in corporate environments where traffic is being monitored and filtered. Accepts any valid URI supported by curl.
        type: array
        items:
          type: string
          format: uri
        uniqueItems: true
      dirs:
        description: The directories used by the Flagship components.
        type: object
        additionalProperties: false
        properties:
          barrelman:
            description: Path to the Barrelman manifests used for installing the Kubernetes control plane components.
            type: string
          bootkube:
            description: Path to the Bootkube working directory. Used for storing Bootkube generated assets like TLS certs.
            type: string
            default: /opt/flagship/bootkube
          downloads:
            description: "**NOT USED** Probably intended to be used as a temp directory."
            type: string
            default: /tmp/flagship
          config:
            description: Path to config directories.
            type: object
            properties:
              docker:
                description: Path to config directory for Docker.
                type: object
                properties:
                  coredns:
                    description: Path to config directory for Docker CoreDNS.
                    type: string
                    default: /etc/docker/flagship/deployments/coredns
                required:
                  - coredns
            required:
              - docker
          flagship:
            description: Path to Flagship application directory.
            type: string
            default: /opt/flagship
          flagship_home:
            description: Path to Flagship home directory. Used for storing generated cluster configuration and state.
            type: string
          persistent_data:
            description: Path for persistent data directories.
            type: object
            properties:
              etcd:
                description: Path for persistent data mounted into etcd container.
                type: string
                default: /var/lib/flagship-etcd
              etcd-tls:
                description: Path for persistent data mounted into etcd TLS container.
                type: string
                default: /etc/etcd/tls
            required: []
        required:
          - barrelman
    required:
      - dirs
      - modules
  images:
    description: Container images for getting the core Flagship component and utility binaries. Each image has a specific use and additional images are not supported.
    type: object
    # We could use patternProperties with .* to avoid managing each property
    # but this causes additionalProperties to not be effective.
    additionalProperties: false
    properties:
      barrelman:
        description: The container image to get Barrelman binary from.
        $ref: "#/definitions/container_image"
      bootkube:
        description: The container image to get Bootkube binary from. Used to create initial temporary control plane.
        $ref: "#/definitions/container_image"
      coredns:
        description: The container image to get the CoreDNS binary from. We rely on a custom binary with unbound enabled.
        $ref: "#/definitions/container_image"
      etcd:
        description: The container image to get the etcd binary from.
        $ref: "#/definitions/container_image"
      helm:
        description: The container image to get the Helm binary from.
        $ref: "#/definitions/container_image"
      hostess:
        description: The container image to get the hostess binary from. Used for idempotently modifying /etc/hosts.
        $ref: "#/definitions/container_image"
      kubernetes:
        description: The container image to get the Kubernetes control plane component binaries from.
        $ref: "#/definitions/container_image"
      s3cryptohandler:
        description: "The container image to get the s3cryptohandler binary from. Used for encrypting files before storing in S3 when using the AWS infrastructure provider. Optional and not used for other providers."
        $ref: "#/definitions/container_image"
      shellcheck:
        description: The container image to get the ShellCheck binary from. Used for static analysis of Flagship Bash code.
        $ref: "#/definitions/container_image"
      terraform:
        description: "The container image to get the Terraform binary from. Used for provisioning AWS infrastructure. Optional and not used for other providers."
        $ref: "#/definitions/container_image"
      tree:
        description: The container image to get the tree binary from. Used for gate testing.
        $ref: "#/definitions/container_image"
      flagship_utils:
        description: The container image to get the flagship_utils binary from.
        $ref: "#/definitions/container_image"
    # We are only setting defaults for images.*.source.
    # So, all images must be provided with at least a version otherwise latest will be used.
    required:
      - barrelman
      - bootkube
      - coredns
      - etcd
      - helm
      - hostess
      - kubernetes
      - shellcheck
      - tree
  runtime:
    description: The container runtime used by Kubernetes. Only Docker is supported.
    type: object
    additionalProperties: false
    properties:
      type:
        description: The type of container runtime. Defines the type of container runtime. Only Docker is supported.
        type: string
        default: docker
        enum:
          - docker
      install:
        description: Specifies if the container runtime should be installed with the OS package manager or if it is already installed.
        type: boolean
        default: true
      method:
        description: Specifies the method for installing the container runtime. Only distro is supported.
        type: string
        default: distro
        enum:
          - distro
    required:
      - type
      - install
      - method
  addons:
    description: "Additional binaries that are copied into the Flagship bin directory and copied to the bootstrap node. Only supports helm and the binary is copied from the container defined at [images.helm](#imageshelm)."
    type: object
    additionalProperties: false
    properties:
      enabled:
        description: The list of binaries to copy.
        $ref: "#/definitions/common_string_array"
  storage:
    description: "**NOT USED** Configuration for persistent storage."
    type: object
    additionalProperties: false
    properties:
      persistence_enabled:
        description: "**NOT USED** Specifies if persistent storage is enabled."
        type: boolean
        default: true
      persistence_type:
        description: "**NOT USED** Specifies the type of persistent storage."
        type: string
        default: minio
        enum:
          - minio
    required: []
  node:
    description: Configuration for cluster nodes.
    type: object
    additionalProperties: false
    properties:
      cluster_name:
        description: The name of the Kubernetes cluster being created. This is used as a unique identifier. Change this value to install multiple clusters from the same bootstrap or development node.
        type: string
        default: cluster.flagship.sh
      bootstrap:
        description: Configuration specific to the bootstrap node.
        type: object
        additionalProperties: false
        properties:
          addr:
            description: Hostname or IP address of the bootstrap node.
            type: string
        required: []
      dns:
        description: Configuration specific to the CoreDNS nodes.
        type: object
        additionalProperties: false
        properties:
          addr:
            description: Hostname or IP addresses for each node running CoreDNS. Used for joining nodes to CoreDNS cluster, updating nameservers at the host level, and adding hosts to known_hosts.
            $ref: "#/definitions/common_host_array"
        required: []
      etcd:
        description: Configuration specific to the etcd nodes.
        type: object
        additionalProperties: false
        properties:
          addr:
            description: Hostname or IP addresses for each node running etcd. Used for joining nodes to etcd cluster.
            $ref: "#/definitions/common_host_array"
        required: []
      master:
        description: Configuration specific to the master nodes.
        type: object
        additionalProperties: false
        properties:
          schedulable:
            description: Specifies if master nodes should configured to schedule workloads.
            type: boolean
            default: false
          addr:
            description: Hostname or IP addresses for each node running master Kubernetes control plane components.
            $ref: "#/definitions/common_host_array"
        required: []
      worker:
        description: Configuration specific to the worker nodes.
        type: object
        additionalProperties: false
        properties:
          addr:
            description: Hostname or IP addresses for each node running worker Kubernetes control plane components.
            $ref: "#/definitions/common_host_array"
        required: []
    required:
      - cluster_name
  network:
    description: Configuration for networking.
    type: object
    additionalProperties: false
    properties:
      proxy:
        description: Configuration for using a proxy for external requests. To use authentication include the credentials in the address.
        type: object
        additionalProperties: false
        properties:
          host:
            description: Configuration for the host level proxy.
            $ref: "#/definitions/common_proxy"
          docker:
            description: Configuration for the Docker level proxy.
            $ref: "#/definitions/common_proxy"
      sdn:
        description: "Configuration for the SDN (software defined networking) layer. **This is legacy config and most Flagship config should not include it.**"
        type: object
        additionalProperties: false
        properties:
          kind:
            description: The kind of SDN to deploy.
            type: string
            default: calico
            enum:
              - calico
          deployment:
            description: Configuration for the SDN deployment.
            type: object
            additionalProperties: false
            properties:
              type:
                description: The type of deployment to use.
                type: string
                default: chart
                enum:
                  - chart
                  - url
              source:
                description: The source of the deployment. A chart directory for chart or a url for url deployment type.
                type: string
                default: /opt/flagship/charts/network-calico-0.1.0.tgz
            required:
              - type
              - source
          utils:
            description: Configuration for Calico utilities to install on the system. This can not be expanded to include other utils but the version can be updated by changing the source.
            type: object
            additionalProperties: false
            properties:
              source:
                description: The URL for the calicoctl binary.
                type: string
                default: https://github.com/projectcalico/calicoctl/releases/download/v3.4.2/calicoctl
              destination:
                description: The filepath to write the source to.
                type: string
                default: /opt/flagship/bin/calicoctl
              sudo:
                description: Specifies if sudo is required to write to the destination.
                type: boolean
                default: false
            required:
              - source
              - destination
              - sudo
        required:
          - kind
          - deployment
          - utils
      cluster:
        description: Configuration for cluster level networking.
        type: object
        additionalProperties: false
        properties:
          ha:
            description: Configuration for highly available cluster networking.
            type: object
            additionalProperties: false
            properties:
              coredns:
                description: Configuration for CoreDNS.
                type: object
                additionalProperties: false
                properties:
                  enabled:
                    description: Enable CoreDNS for handling cluster DNS.
                    type: boolean
                    default: false
                  config:
                    description: Configuration for CoreDNS.
                    type: object
                    additionalProperties: false
                    properties:
                      forwarders:
                        description: Configuration for DNS forwarders.
                        type: object
                        additionalProperties: false
                        properties:
                          ipaddr:
                            description: List of hosts to forward DNS requests to. These forwarders will be added to the CoreDNS Corefile and used instead of the entries in resolv.conf. At least one entry is required, set it to an empty string "" to use the existing resolv.conf for forwarding.
                            $ref: "#/definitions/common_host_array"
                          port:
                            description: Port to forward DNS requests to.
                            type: integer
                            default: 53
                        required:
                          - ipaddr
                      domains:
                        description: Configuration for DNS domains to be added to the Corefile. The first key is the
                        type: array
                        items:
                          type: object
                          properties:
                            port:
                              type: integer
                            origin:
                              type: string
                            ttl:
                              type: string
                            soa:
                              type: object
                              additionalProperties: false
                              properties:
                                ns:
                                  type: string
                                user:
                                  type: string
                              required:
                                - ns
                                - user
                            records:
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  type:
                                    type: string
                                  host:
                                    type: string
                                  value:
                                    type: string
                                required:
                                  - type
                                  - value
                              uniqueItems: true
                          required:
                            - port
                            - origin
                            - ttl
                            - soa
                            - records
                        uniqueItems: true
                    required:
                      - forwarders
                      - domains
                required:
                  - config
            required:
              - coredns
        required:
          - ha
      host:
        type: object
        additionalProperties: false
        properties:
          ipvs:
            type: object
            additionalProperties: false
            properties:
              enabled:
                type: boolean
            required:
              - enabled
          interface:
            type: string
        required:
          # - ipvs
          - interface
      endpoints:
        description: Configuration for cluster DNS endpoints.
        type: object
        additionalProperties: false
        properties:
          kubernetes:
            type: object
            additionalProperties: false
            properties:
              dashboard:
                description: Configuration for the Kubernetes Daashboard endpoint.
                type: object
                additionalProperties: false
                properties:
                  nodeport:
                    type: integer
                    description: The node port to configure for the Kubernetes Dashboard.
                    default: 30910
                required:
                  - nodeport
              api:
                description: Configuration for the Kubernetes API endpoint. A record <addr>
                type: object
                additionalProperties: false
                properties:
                  dns:
                    description: The cluster domain used to construct FQDN for DNS records. Used to create CoreDNS A records for the DNS, etcd, bootstrap, master, and worker nodes. Note that our default configuration uses the master nodes to host DNS and etcd but these potentially could be hosted outside the cluster.
                    type: string
                    default: flagship.sh
                  addr:
                    description: The IP address of the host running the API.
                    $ref: "#/definitions/common_host_array"
                  port:
                    description: The port the endpoint will use.
                    type: integer
                    default: 6443
                  method:
                    description: The protocol the endpoint will use.
                    type: string
                    default: https
                required:
                  - port
                  - method
              haproxy:
                type: object
                additionalProperties: false
                properties:
                  dns:
                    $ref: "#/definitions/common_host_array"
                  addr:
                    $ref: "#/definitions/common_host_array"
                  virtualaddr:
                    type: string
                  port:
                    type: integer
                  method:
                    type: string
                required:
                  - dns
                  - virtualaddr
              cidr:
                type: object
                additionalProperties: false
                properties:
                  pod:
                    type: string
                  svc:
                    type: string
                required:
                  - pod
                  - svc
            required:
              - api
              - haproxy
              - cidr
          etcd:
            type: object
            additionalProperties: false
            properties:
              api:
                type: object
                additionalProperties: false
                properties:
                  addr:
                    $ref: "#/definitions/common_host_array"
                  port:
                    type: integer
                  peer:
                    type: integer
                  method:
                    type: string
                  dns:
                    type: string
                required:
                  - port
                  - peer
                  - method
                  - dns
            required:
              - api
          weave:
            type: object
            additionalProperties: false
            properties:
              scope:
                type: object
                additionalProperties: false
                properties:
                  nodeport:
                    type: integer
                required:
                  - nodeport
            required:
              - scope
        required:
          - kubernetes
          - etcd
    required:
      - cluster
      - host
      - endpoints
  bootstrap:
    description: Configuration for bootstrap node.
    type: object
    additionalProperties: false
    properties:
      etcd:
        description: Configuration for etcd on bootstrap node.
        type: object
        additionalProperties: false
        properties:
          token:
            description: Token for etcd used by Kubernetes, Calico, and CoreDNS.
            type: string
            default: bootkube
        required:
          - token
    required:
      - etcd
  conf:
    description: Configuration for Kubernetes control plane components.
    type: object
    additionalProperties: false
    properties:
      bootkube:
        description: "**NOT USED** Configuration for Bootkube."
        type: object
        additionalProperties: false
        properties:
          developer:
            description: "**NOT USED** Specifies if Bootkube is running on a local development install."
            type: boolean
        required:
          - developer
      kubelet:
        description: "Configuration for kubelet. Used to create both the initial configuration file and the systemd configuration file. For details on each setting see [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
        type: object
        additionalProperties: false
        properties:
          authentication:
            description: Configuration for kubelet authentication.
            type: object
            additionalProperties: false
            properties:
              anonymous:
                description: Configuration for kubelet anonymous authentication.
                type: object
                additionalProperties: false
                properties:
                  enabled:
                    description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                    type: boolean
                    default: false
              webhook:
                description: Configuration for kubelet webhook authentication.
                type: object
                additionalProperties: false
                properties:
                  enabled:
                    description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                    type: boolean
                    default: true
              x509:
                description: Configuration for kubelet x509 authentication.
                type: object
                additionalProperties: false
                properties:
                  client_ca_file:
                    description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                    type: string
                    default: /etc/kubernetes/ca.crt
          authorization:
            description: Configuration for kubelet authorization.
            type: object
            additionalProperties: false
            properties:
              mode:
                description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                type: string
                default: Webhook
          cgroup_driver:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            type: string
            default: cgroupfs
          cluster_dns_nameservers:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            default: ""
            $ref: "#/definitions/common_host_array"
          cluster_domain:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            type: string
            default: cluster.local
          cloud_provider:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            oneOf:
              - type: string
              - type: 'null'
            enum:
              - aws
              - null
            default: null
          config_file:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            type: string
            default: /var/lib/kubelet/config.yaml
          dynamic_config_dir:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            type: string
            default: /var/lib/kubelet/dynamic-config
          fail_swap_on:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            type: boolean
            default: false
          masters:
            description: Configuration for kubelet masters.
            type: object
            additionalProperties: false
            properties:
              node_labels:
                description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                type: string
                default: '"node-role.kubernetes.io/master"'
              register_with_taints:
                description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                type: string
                default: '"node_role_kubernetes.io/master=:NoSchedule"'
          static_pod_path:
            description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
            type: string
            default: /etc/kubernetes/manifests
          workers:
            description: Configuration for kubelet workers.
            type: object
            additionalProperties: false
            properties:
              node_labels:
                description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                type: string
                default: '"node-role.kubernetes.io/master"'
              register_with_taints:
                description: "See [kubelet reference](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options)"
                type: string
                default: '"node_role_kubernetes.io/master=:NoSchedule"'
          dns:
            type: object
            additionalProperties: false
            properties:
              nameservers:
                $ref: "#/definitions/common_host_array"
            required:
              - nameservers
    required:
      - bootkube
      - kubelet
  infrastructure:
    description: Configuration for provisioning cluster infrastructure on a cloud provider.
    type: object
    additionalProperties: false
    properties:
      provider:
        description: Configuartion for the provider.
        type: object
        additionalProperties: false
        properties:
          kind:
            description: The type of cloud provider to use for hosting the infrastructure.
            type: string
            default: hyperkit
            enum:
              - aws
              - hyperkit
              - none
          spec:
            description: "The cloud provider specific configuration for the infrastructure. The provider is set by [infrastructure.provider.kind](#infrastructureproviderkind). Options for each kind are shown below as infrastructure.provider.spec[KIND].*"
            oneOf:
              - $ref: "#/definitions/provider_hyperkit"
              - $ref: "#/definitions/provider_aws"
              - $ref: "#/definitions/provider_none"
        required:
          - kind
          - spec
      provisioner:
        description: Configuartion for the provisioner.
        type: object
        additionalProperties: false
        properties:
          kind:
            description: The type of provisioner to use for creating the infrastructure.
            type: string
            default: bash
            enum:
              - bash
              - terraform
          spec:
            description: "The provisioner specific configuration for creating the infrastructure. The provisioner is set by [infrastructure.provisioner.kind](#infrastructureprovisionerkind). Options for each kind are shown below as infrastructure.provisioner.spec[KIND].*"
            oneOf:
              - $ref: "#/definitions/provisioner_bash"
              - $ref: "#/definitions/provisioner_terraform"
        required:
          - kind
          - spec
    required:
      - provider
      - provisioner
  helm:
    description: Configuration for serving and installing Helm charts for the Flagship components. The local repo is used for Barrelman chart installs too.
    type: object
    additionalProperties: false
    properties:
      repo:
        description: Configuration for a local Helm chart repo.
        type: object
        additionalProperties: false
        properties:
          name:
            description: The name of the local Helm chart repo to add.
            type: string
            default: local
          url:
            description: The URL of the local Helm chart repo to add.
            type: string
            default: http://localhost:8879/charts
          enabled:
            description: Specifies if a local Helm chart repo should be started.
            type: boolean
            default: true
          clean:
            description: Specifies if a the local Helm config directory should be removed.
            type: boolean
            default: true
      security:
        description: Configuration for Helm security.
        type: object
        additionalProperties: false
        properties:
          managed_tls:
            description: Specifies whether Helm should run secured by TLS.
            type: boolean
            default: false
      deployments:
          deployments:
            description: List of components that should not be installed by Bootkube generated assets. These manifests will be removed from the Bootkube assets folder.
            enum:
              - kube-apiserver
              - kube-controller-manager
              - kube-haproxy
              - kube-scheduler
              - sdn-calico
              - utils-coredns
              - utils-kube-pod-checkpointer
            $ref: "#/definitions/common_string_array"
required:
  - environment
  - images
  # - runtime
  - addons
  - storage
  - node
  - network
  # - bootstrap
  - conf
  - infrastructure
  # - helm

definitions:
  common_host_array:
    type: array
    items:
      anyOf:
        - type: string
          format: ipv4
        - type: string
          format: ipv6
        - type: string
          format: hostname
        - type: string
          enum:
            - ""
        - type: "null"
    uniqueItems: true
  common_string_array:
    type: array
    items:
      oneOf:
        - type: string
        - type: "null"
    uniqueItems: true
  common_proxy:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
        description: If the proxy settings should be enabled.
        default: false
      ftp:
        type: string
        description: The proxy address for FTP connections.
        default: http://172.31.25.222:3128
      http:
        type: string
        description: The proxy address for HTTP connections.
        default: http://172.31.25.222:3128
      https:
        type: string
        description: The proxy address for HTTPS connections.
        default: http://172.31.25.222:3128
      excludes:
        description: The addresses to exclude from sending to the proxy.
        default:
          - "localhost"
          - "192.168.0.0/16"
          - "127.0.0.1"
          - ".flagship.sh"
          - "flagship.sh"
          - "10.10.10.10/16"
          - "172.31.21.150/16"
        $ref: "#/definitions/common_string_array"
  container_image:
    additionalProperties: false
    properties:
      source:
        description: Defines the Docker repo for the component.
        type: string
      version:
        description: Defines the Docker repo version for the component.
        type: string
    required:
      - version
  provider_none:
    type: object
    additionalProperties: false
    properties:
      user:
        description: The user that will be used to log into the cluster's nodes
        type: string
        default: flagship
      bootstrap:
        description: The IP address of the bootstrap node that will be used to initialize the cluster
        type: string
      masters:
        description: An array of IP addresses for the master nodes in the cluster
        type: array
        items:
          type: string
      workers:
        description: An array of IP addresses for the worker nodes in the cluster
        type: array
        items:
          type: string
    required:
      - bootstrap
      - masters
      - workers
  provider_hyperkit:
    type: object
    additionalProperties: false
    properties:
      clean:
        type: boolean
      compute:
        type: object
        additionalProperties: false
        properties:
          uuid:
            type: string
          disk:
            type: string
          vcpu:
            type: integer
          ram:
            type: string
        required:
          - uuid
          - disk
          - vcpu
          - ram
      image:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
          type:
            type: string
          url_image:
            type: string
          url_initrd:
            type: string
          url_vmlinuz:
            type: string
          url_boot:
            type: string
          boot:
            type: object
            additionalProperties: false
            properties:
              initrd:
                type: string
              vmlinuz:
                type: string
            required:
              - initrd
              - vmlinuz
        required:
          - name
          - type
    required:
      - clean
      - compute
      - image
  provider_aws_bootstrap:
    type: object
    additionalProperties: false
    properties:
      image:
        type: string
      machine_type:
        type: string
      instance_count:
        type: integer
      availability_zone:
        type: string
      root_volume_type:
        type: string
      subnet_id:
        type: string
      associate_public_ip_address:
        type: boolean
      ssh_user:
        type: string
      root_volume_size:
        type: integer
      etcd_volume_size:
        type: integer
      mount_point:
        type: string
    required:
      - associate_public_ip_address
      - etcd_volume_size
      - image
      - instance_count
      - machine_type
      - mount_point
      - root_volume_size
      - ssh_user
      - subnet_id
  provider_aws_nodegroup:
    type: object
    additionalProperties: false
    properties:
      associate_public_ip_address:
        type: boolean
      image:
        type: string
      labels:
        type: string
      machine_type:
        type: string
      max_size:
        type: integer
      min_size:
        type: integer
      name:
        type: string
      root_volume_size:
        type: integer
      root_volume_type:
        type: string
      subnets:
        type: string
    required:
      - associate_public_ip_address
      - image
      - machine_type
      - max_size
      - min_size
      - name
      - root_volume_size
      - root_volume_type
      - subnets
  provider_aws_subnet:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      cidr:
        type: string
      id:
        type: string
      type:
        type: string
      zone:
        type: string
    required:
      - name
      - cidr
      - type
      - zone
  provider_aws_credential:
    type: object
    additionalProperties: false
    properties:
      assume_role:
        type: string
      location:
        type: string
      profile:
        type: string
      use_instance_profile:
        enum:
          - true
    required:
      - assume_role
      - location
      - profile
      - use_instance_profile
  provider_aws_security_group:
    type: object
    additionalProperties: false
    properties:
      id:
        type: string
      name:
        type: string
      role:
        type: string
      ingress:
        type: string
      egress:
        type: string
    required:
      - name
      - role
      - ingress
      - egress
  provider_aws:
    type: object
    additionalProperties: false
    properties:
      credential:
        $ref: "#/definitions/provider_aws_credential"
      region:
        type: string
      route53:
        type: object
        additionalProperties: false
        properties:
          dns_suffix:
            type: string
          private_zone:
            type: boolean
      ec2:
        type: object
        additionalProperties: false
        properties:
          nodegroups:
            type: object
            additionalProperties: false
            patternProperties:
              bootstrap:
                $ref: "#/definitions/provider_aws_bootstrap"
              master|worker:
                type: array
                items:
                  $ref: "#/definitions/provider_aws_nodegroup"
            required:
              - bootstrap
              - master
              - worker
          subnets:
            type: array
            items:
              $ref: "#/definitions/provider_aws_subnet"
            uniqueItems: true
          key_pairs:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
              public_key:
                type: string
            required:
              - name
              - public_key
          security_groups:
            type: array
            items:
              $ref: "#/definitions/provider_aws_security_group"
            uniqueItems: true
          vpc:
            type: object
            properties:
              id:
                type: string
              cidr:
                type: string
            required:
              - id
              - cidr
      iam:
        type: object
        properties:
          instance_profile_role_name:
            type: string
      s3:
        name:
          type: string
        key:
          type: string
        region:
          type: string
        kms:
          type: string
    required:
      - credential
      - region
      - ec2
      - s3
  provisioner_bash:
    type: object
    additionalProperties: false
    properties:
      kubeconf:
        type: object
        additionalProperties: false
        properties:
          context_name:
            type: string
          user_name:
            type: string
        required:
          - context_name
          - user_name
    required:
      - kubeconf
  provisioner_terraform:
    type: object
    additionalProperties: false
    properties:
      state:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
          spec:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
              key:
                type: string
              region:
                type: string
            required:
              - name
              - key
              - region
        required:
          - type
          - spec
    required:
      - state
